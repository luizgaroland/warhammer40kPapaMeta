# docker-compose.yml

services:
  # =====================================================
  # SHARED INFRASTRUCTURE
  # =====================================================
  
  # PostgreSQL Database - Shared by all services
  postgres:
    image: postgres:15-alpine
    container_name: warhammer_postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: warhammer_meta
      POSTGRES_USER: warhammer_user
      POSTGRES_PASSWORD: warhammer_secret_2024
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d  # SQL initialization scripts
      - ./database/backups:/backups  # Backup directory
    networks:
      - warhammer_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U warhammer_user -d warhammer_meta"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis - Message broker between services
  redis:
    image: redis:7-alpine
    container_name: warhammer_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - warhammer_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin - Database management UI (optional, remove in production)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: warhammer_pgadmin
    restart: unless-stopped
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - warhammer_network
    depends_on:
      - postgres

  # Redis Commander - Redis management UI (optional, remove in production)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: warhammer_redis_commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: redis:redis:6379
    networks:
      - warhammer_network
    depends_on:
      - redis

  # =====================================================
  # MICROSERVICES
  # =====================================================

  # Python Web Scraper Service
  web-scraper:
    build:
      context: ./services/web-scraper
      dockerfile: Dockerfile
    container_name: warhammer_web_scraper
    restart: unless-stopped
    environment:
      # Database connection
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: warhammer_meta
      DATABASE_USER: warhammer_user
      DATABASE_PASSWORD: warhammer_secret_2024
      
      # Redis connection
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      
      # Scraper configuration
      SCRAPER_ENV: development
      SCRAPER_LOG_LEVEL: INFO
      WAHAPEDIA_BASE_URL: https://wahapedia.ru
      RATE_LIMIT_DELAY: 2  # Seconds between requests
      
      # Python environment
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
    volumes:
      - ./services/web-scraper:/app
      - ./logs/scraper:/app/logs
    networks:
      - warhammer_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Laravel Application (placeholder for now)
  # laravel:
  #   build:
  #     context: ./services/laravel
  #     dockerfile: Dockerfile
  #   container_name: warhammer_laravel
  #   restart: unless-stopped
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     DB_CONNECTION: pgsql
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #     DB_DATABASE: warhammer_meta
  #     DB_USERNAME: warhammer_user
  #     DB_PASSWORD: warhammer_secret_2024
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #   volumes:
  #     - ./services/laravel:/var/www/html
  #   networks:
  #     - warhammer_network
  #   depends_on:
  #     - postgres
  #     - redis

# =====================================================
# NETWORKS
# =====================================================
networks:
  warhammer_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

# =====================================================
# VOLUMES
# =====================================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
